---
swagger: "2.0"
info:
  description: 향수 정보 서비스 A.fume Server Api 문서
  version: 1.0.0
  title: Swagger A.fume Server
  termsOfService: http://swagger.io/terms/
  contact:
    email: heesung6701@naver.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: {SERVER_URL}:{SERVER_PORT}
basePath: /A.fume/api/0.0.1
tags:
- name: perfume
  description: 향수 정보
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: series
  description: 계열
- name: ingredient
  description: 향료
- name: note
  description: 노트
- name: brand
  description: 브랜드
- name: review
  description: 시향기
- name: reply
  description: 댓글
- name: keyword
  description: 키워드
- name: wishlist
  description: 위시리스트
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
schemes:
#- https
- http
# security:
# - APIKeyHeader: []
paths:
  /perfume:
    post:
      tags:
      - perfume
      summary: 향수 정보 추가, Admin(WEB) 용
      operationId: createPerfume
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/PerfumeInfo'
          - $ref: '#/definitions/PerfumeDetailInfo'
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 추가 성공
              data:
                type: integer
                example: 1
                description: 향수 perfumeIdx
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        405:
          description: Invalid input
      x-swagger-router-controller: Perfume
  /perfume/search/all:
    get:
      tags:
      - perfume
      summary: 향수 검색
      operationId: searchPerfume
      security:
        - userToken: []
      produces:
      - application/json
      parameters:
      - name: brand
        in: query
        type: string
        description: 브랜드이름을 delimiter(%)로 연결
        required: false
      - name: series
        in: query
        type: string
        description: 계열 이름을 delimiter(%)로 연결
        required: false
      - name: keyword
        in: query
        type: string
        description: 키워드를 delimiter(%)로 연결
        required: false
      - name: sort
        in: query
        type: string
        enum:
        - likeCnt_asc
        - releaseDate_asc
        - likeCnt_desc
        - releaseDate_desc
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 검색 성공
              data:
                type: array
                items:
                  $ref: '#/definitions/Perfume'
        400:
          description: Invalid tag value
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Perfume
  /perfume/recentSearch:
    get:
      tags:
      - perfume
      summary: 최근 검색한 향수 조회
      description: 최근에 검색한 향수를 조회한다.
      operationId: recentSearch
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 검색 성공
              data:
                type: array
                items:
                  $ref: '#/definitions/Perfume'
        400:
          description: Invalid tag value
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Perfume
  /perfume/recommend:
    get:
      tags:
      - perfume
      summary: 유저 기반 향수 추천
      description: 유저 연령, 성별에 따른 향수를 추천해준다.
      operationId: recommendByUser
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 검색 성공
              data:
                type: array
                items:
                  $ref: '#/definitions/Perfume'
        400:
          description: Invalid tag value
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Perfume
  /perfume/{perfumeIdx}:
    get:
      tags:
      - perfume
      summary: 향수 세부 정보 조회
      description: 향수 세부 정보를 반환한다.
      security:
        - userToken: []
      operationId: getPerfumeById
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 세부 조회 성공
              data:
                $ref: '#/definitions/PerfumeDetail'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        404:
          description: Perfume not found
      x-swagger-router-controller: Perfume
    put:
      tags:
      - perfume
      summary: 향수 정보 업데이트, Admin(WEB) 용
      operationId: updatePerfume
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/PerfumeInfo'
      responses:
        200:
          description: 성공
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        405:
          description: Invalid input
      x-swagger-router-controller: Perfume
    delete:
      tags:
      - perfume
      summary: 향수 삭제, Admin(WEB) 용
      operationId: deletePerfume
      security:
        - userToken: []
      x-security-scopes:
        - admin
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        404:
          description: Perfume not found
      x-swagger-router-controller: Perfume
  /perfume/{perfumeIdx}/like:
    put:
      tags:
      - perfume
      summary: 향수 좋아요
      description: 향수 좋아요 상태를 반환한다.
      security:
        - userToken: []
      x-security-scopes:
        - user
      operationId: likePerfume
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 향수 세부 조회 성공
              data:
                type: boolean
                example: true
                description: 요청 이후 좋아요 상태
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        404:
          description: Perfume not found
      x-swagger-router-controller: Perfume
  /brand:
    post:
      tags:
      - brand
      summary: 브랜드 삽입, Admin(WEB) 용
      operationId: postBrand
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Post new brand info
        required: false
        schema:
          $ref: '#/definitions/BrandInfo'
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 브랜드 추가 성공
              data:
                type: integer
                example: 1
                description: 브랜드 brandIdx
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Brand
  /brand/all:
    get:
      tags:
      - brand
      summary: 브랜드 전체 조회
      description: 브랜드 리스트 반환
      operationId: getBrandAll
      produces:
      - application/json
      parameters:
      - name: sort
        in: query
        type: string
        enum:
        - name_asc
        - name_desc
        - englishName_asc
        - englishName_desc
        - createdAt_asc
        - createdAt_desc
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 브랜드 조회 성공
              data:
                type: array
                items:
                  allOf:
                  - $ref: '#/definitions/BrandInfo'
                  - type: object
                    properties:
                      brandIdx:
                        type: integer
                    example:
                      brandIdx: 1
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Brand
  /brand/search/all:
    get:
      tags:
      - brand
      summary: 브랜드 검색, Admin(WEB) 용
      operationId: searchBrand
      produces:
      - application/json
      parameters:
      - name: sort
        in: query
        type: string
        enum:
        - name_asc
        - name_desc
        - englishName_asc
        - englishName_desc
        - createdAt_asc
        - createdAt_desc
        required: false
      - name: pagingSize
        in: query
        type: integer
        required: false
      - name: pagingIndex
        in: query
        type: integer
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 브랜드 검색 성공
              data:
                type: object
                properties:
                  count:
                    type: integer
                    example: 10
                  rows:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/definitions/BrandInfo'
                      - type: object
                        properties:
                          brandIdx:
                            type: integer
                        example:
                          brandIdx: 1
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Brand
  /brand/{brandIdx}:
    get:
      tags:
      - brand
      summary: 브랜드 조회
      description: 브랜드 조회
      operationId: getBrandByIdx
      security:
        - userToken: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: brandIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 브랜드 세부 조회 성공
              data:
                allOf:
                - $ref: '#/definitions/BrandInfo'
                - type: object
                  properties:
                    brandIdx:
                      type: integer
                  example:
                    brandIdx: 1
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Brand
    put:
      tags:
      - brand
      summary: 브랜드 수정, Admin(WEB) 용
      operationId: putBrand
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: brandIdx
        in: path
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/BrandInfo'
      responses:
        200:
          description: 성공
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Brand
    delete:
      tags:
      - brand
      summary: 브랜드 삭제, Admin(WEB) 용
      operationId: deleteBrand
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: brandIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Brand
  /ingredient:
    get:
      tags:
      - ingredient
      summary: 향료 목록 조회
      operationId: getIngredientList
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: ingredient 목록 조회 성공
              data:
                type: array
                items:
                  allOf:
                    - $ref: '#/definitions/IngredientInfo'
                    - type: object
                      properties:
                        ingredientIdx:
                          type: integer
                      example:
                        ingredientIdx: 333
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Ingredient
    post:
      tags:
      - ingredient
      summary: 향료 삽입, Admin(WEB) 용
      operationId: postIngredient
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Post new ingredient info
        required: false
        schema:
          allOf:
            - $ref: '#/definitions/IngredientInfo'
            - type: object
              properties:
                seriesName:
                  type: string
              example:
                seriesName : 우디
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: ingredient 추가 성공
              data:
                type: integer
                example: 133
                description: ingredient idx
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Ingredient
  /ingredient/{ingredientIdx}:
    get:
      tags:
      - ingredient
      summary: 특정 향료 조회
      description: 특정 향료 조회
      operationId: getIngredientByIdx
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: ingredientIdx
        in: path
        description: 향료 ID
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: ingredient 개별 조회 성공
              date :
                allOf:
                - $ref: '#/definitions/IngredientInfo'
                - type: object
                  properties:
                    ingredientIdx:
                      type: integer
                  example:
                    ingredientIdx: 333
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Ingredient
    put:
      tags:
      - ingredient
      summary: 향료 수정, Admin(WEB) 용
      operationId: putIngredient
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: ingredientIdx
        in: path
        description: 향료 ID
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Updated series info
        required: false
        schema:
          $ref: '#/definitions/IngredientInfo'
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: ingredient 수정 성공
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Ingredient
    delete:
      tags:
      - ingredient
      summary: 향료 삭제, Admin(WEB) 용
      description: 향료 삭제
      operationId: deleteIngredient
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: ingredientIdx
        in: path
        description: 향료 ID
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: ingredient 삭제 성공
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Ingredient
  /series/all:
    get:
      tags:
      - series
      summary: 계열 전체 목록 조회
      operationId: getSeriesList
      produces:
      - application/json
      parameters:
      - name: sort
        in: query
        type: string
        enum:
        - name_asc
        - name_desc
        - englishName_asc
        - englishName_desc
        - createdAt_asc
        - createdAt_desc
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: series 목록 조회 성공
              data:
                type: array
                items:
                  allOf:
                    - $ref: '#/definitions/SeriesInfo'
                    - type: object
                      properties:
                        seriesIdx:
                          type: integer
                      example:
                        seriesIdx: 222
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Series
  /series/search/all:
    get:
      tags:
      - series
      summary: 계열 검색, Admin(WEB) 용
      operationId: searchSeries
      produces:
      - application/json
      parameters:
      - name: sort
        in: query
        type: string
        enum:
        - name_asc
        - name_desc
        - englishName_asc
        - englishName_desc
        - createdAt_asc
        - createdAt_desc
        required: false
      - name: pagingSize
        in: query
        type: integer
        required: false
      - name: pagingIndex
        in: query
        type: integer
        required: false
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 계열 검색 성공
              data:
                type: object
                properties:
                  count:
                    type: integer
                    example: 10
                  rows:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/definitions/SeriesInfo'
                      - type: object
                        properties:
                          seriesIdx:
                            type: integer
                        example:
                          seriesIdx: 1
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Series
  /series:
    post:
      tags:
      - series
      summary: 계열 삽입, Admin(WEB) 용
      operationId: postSeries
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Post new series info
        required: false
        schema:
          $ref: '#/definitions/SeriesInfo'
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: series 추가 성공
              data:
                type: integer
                example: 122
                description: series idx
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Series
  /series/{seriesIdx}:
    get:
      tags:
      - series
      summary: 특정 계열 조회
      description: 특정 계열 조회
      operationId: getSeriesByIdx
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: seriesIdx
        in: path
        description: 계열 ID
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example : series 개별 조회 성공
              data:
                  $ref : '#/definitions/SeriesInfo'
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Series
    put:
      tags:
      - series
      summary: 계열 수정, Admin(WEB) 용
      operationId: putSeries
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: seriesIdx
        in: path
        description: 계열 ID
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Updated series info
        required: false
        schema:
          $ref: '#/definitions/SeriesInfo'
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: series 수정 성공
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Series
    delete:
      tags:
      - series
      summary: 계열 삭제, Admin(WEB) 용
      operationId: deleteSeries
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: seriesIdx
        in: path
        description: 계열 ID
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: series 삭제 성공
        401:  
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Series
  /note:
    post:
      tags:
      - note
      summary: note 삽입, Admin(WEB) 용
      operationId: postNote
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Post new series info
        required: false
        schema:
          $ref: '#/definitions/NoteInfo'
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: note 추가 성공
              data:
                type: integer
                example: 122
                description: perfume idx
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Note
    put:
      tags:
      - note
      summary: note 수정, Admin(WEB) 용
      operationId: putNote
      security:
        - userToken: []
      x-security-scopes:
        - admin
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Updated note info
        required: false
        schema:
          $ref: '#/definitions/NoteInfo'
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: note 수정 성공
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Note
  /perfume/{perfumeIdx}/review:
    post:
      tags:
      - review
      summary: 시향노트 추가, Admin(WEB) 용
      operationId: postReview
      security:
        - userToken: []
      x-security-scopes:
        - user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        description: 향수 Idx
        required: true
        type: integer
        format: int64
      - name: body
        in: body
        description: 시향노트 정보
        required: true
        schema:
          $ref: '#/definitions/ReviewInfo'
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 시향노트 추가 성공
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        405:
          description: Invalid input
      x-swagger-router-controller: Review
    get:
      tags:
      - review
      summary: 전체 시향노트 반환(인기순)
      description: 특정 향수에 달린 전체 시향노트 좋아요 개수 순으로 가져오기
      operationId: getReviewOfPerfumeByLike
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        description: 향수 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 특정 향수의 시향노트 목록 인기순 조회 성공
              data:
                type: array
                items:
                  allOf:
                  - $ref: '#/definitions/ReviewInfo'
                  - type: object
                    properties: 
                      reviewIdx:
                        type: integer
                        format: int64
                      likeCount:
                        type: integer
                        format: int64
                      age:
                        type: string
                      userGender: 
                        type: string
                      nickname:
                        type: string
                      createTime:
                        type: string
                    example:
                      reviewIdx: 339
                      likeCount: 3
                      userGender: 여자
                      age: 20대 중반
                      nickname: 담담
                      createTime: '2020-12-07 00:11:41'
        400:
          description: Invalid username/password supplied
      x-swagger-router-controller: Review
  /perfume/{perfumeIdx}/review/score:
    get:
      tags:
      - review
      summary: 전체 시향노트 반환(별점순)
      description: 특정 향수에 달린 전체 시향노트 별점순으로 가져오기
      operationId: getReviewOfPerfumeByScore
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        description: 향수 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 특정 향수의 시향노트 목록 별점순 조회 성공
              data:
                type: array
                items:
                  allOf:
                  - $ref: '#/definitions/ReviewInfo'
                  - type: object
                    properties: 
                      reviewIdx:
                        type: integer
                        format: int64
                      likeCount:
                        type: integer
                        format: int64
                      age:
                        type: string
                      userGender: 
                        type: string
                      nickname:
                        type: string
                      createTime:
                        type: string
                    example:
                      reviewIdx: 339
                      likeCount: 5
                      userGender: 여자
                      age: 20대 중반
                      nickname: 담담
                      createTime: '2020-12-07 00:11:41'
        400:
          description: Invalid username/password supplied
      x-swagger-router-controller: Review
  /perfume/{perfumeIdx}/review/recent:
    get:
      tags:
      - review
      summary: 전체 시향노트 반환(최신순)
      description: 특정 향수에 달린 전체 시향노트 최신순으로 가져오기
      operationId: getReviewOfPerfumeByRecent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        description: 향수 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 특정 향수의 시향노트 목록 최신순 조회 성공
              data:
                type: array
                items:
                  allOf:
                  - $ref: '#/definitions/ReviewInfo'
                  - type: object
                    properties: 
                      reviewIdx:
                        type: integer
                        format: int64
                      likeCount:
                        type: integer
                        format: int64
                      age:
                        type: string
                      userGender: 
                        type: string
                      nickname:
                        type: string
                      createTime:
                        type: string
                    example:
                      reviewIdx: 339
                      likeCount: 5
                      age: 20대 중반
                      userGender: 여자
                      nickname: 홍길동
                      createTime: '2020-12-07 00:11:41'
        400:
          description: Invalid username/password supplied
      x-swagger-router-controller: Review
  /review/{reviewIdx}:
    get:
      tags:
      - review
      summary: 시향노트 반환
      description: 특정 시향노트 가져오기
      operationId: getReviewByIdx
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: reviewIdx
        in: path
        description: 시향노트 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 시향노트 조회 성공
              data:
                allOf:
                - $ref: '#/definitions/ReviewInfo'
                - type: object
                  properties: 
                    imageUrl:
                      type: string
                    brandName: 
                      type: string
                    name:
                      type: string
                    userIdx:
                      type: integer
                      format: int64
                    nickname:
                      type: string
                    createTime:
                      type: string
                  example:
                    imageUrl: 
                    brandName: Jo Malone
                    name: 154 코롱
                    userIdx: 339
                    nickname: 홍길동
                    createTime: '2020-12-07 00:11:41'
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        404:
          description: Review not found
      x-swagger-router-controller: Review
    put:
      tags:
      - review
      summary: 시향노트 수정
      description: 시향노트 수정하기
      operationId: updateReview
      security:
        - userToken: []
      x-security-scopes:
        - user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: reviewIdx
        in: path
        description: 시향노트 Idx
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ReviewInfo'
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 시향노트 수정 성공
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        405:
          description: Invalid input
      x-swagger-router-controller: Review
    delete:
      tags:
      - review
      summary: 시향노트 삭제, Admin(WEB) 용
      description: 시향노트 삭제하기
      operationId: deleteReview
      security:
        - userToken: []
      x-security-scopes:
        - user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: reviewIdx
        in: path
        description: 시향노트 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message: 
                type: string
                example: 시향노트 삭제 성공
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Review
  /review/{reviewIdx}/like:
    put:
      tags:
      - review
      summary:  시향노트 좋아요
      description: 시향노트 좋아요 상태 변경하기.
      security:
        - userToken: []
      x-security-scopes:
        - user
      operationId: likeReview
      produces:
      - application/json
      parameters:
      - name: reviewIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 시향노트 좋아요 상태 변경 성공
              data:
                type: boolean
                example: true
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
        404:
          description: Review Like not found
      x-swagger-router-controller: Review
  /myperfume:
    get:
      tags:
      - review
      summary: 마이퍼퓸 반환
      description: 나의 시향노트 목록 가져오기
      operationId: getReviewByUser
      security:
        - userToken: []
      x-security-scopes:
        - user
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: 마이퍼퓸 조회 성공
              data:
                type: array
                items:
                  allOf:
                  - $ref: '#/definitions/ReviewInfo'
                  - type: object
                    properties:
                      reviewIdx:
                        type: integer
                        format: int64
                      imageUrl:
                        type: string
                      brandName:
                        type: string
                      name:
                        type: string
                      createTime:
                        type: string
                    example:
                      reviewIdx: 349
                      imageUrl: 
                      brandName: JoMalone
                      name: 넥타린 블로썸 앤 허니 코롱
                      createTime: '2020-12-07 00:11:41'
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        404:
          description: Review not found
      x-swagger-router-controller: Review
  /review/{reviewIdx}/reply:
    post:
      tags:
      - reply
      summary: 댓글 추가
      description : 시향노트에 댓글 추가하기
      operationId: postReply
      security:
        - userToken: []
      x-security-scopes:
        - user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: reviewIdx
        in: path
        description: 시향노트 Idx
        required: true
        type: integer
        format: int64
      - name: body
        in: body
        description: 댓글 정보
        required: true
        schema:
          $ref: '#/definitions/ReplyInfo'
      responses:
        200:
          description: 성공
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        405:
          description: Invalid input
      x-swagger-router-controller: Reply
    get:
      tags:
      - reply
      summary: 전체 댓글 반환
      description: 특정 시향노트에 달린 전체 댓글 가져오기
      operationId: getReplyOfReview
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: reviewIdx
        in: path
        description: 시향노트 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              allOf:
              - $ref: '#/definitions/Reply'
              - type: object
                properties:
                  replyIdx:
                    type: integer
                    format: int64
                example:
                  replyIdx: 1
        400:
          description: Invalid username/password supplied
      x-swagger-router-controller: Reply
  /reply/{replyIdx}:
    get:
      tags:
      - reply
      summary: 댓글 반환
      description: 시향노트에 달린 특정 댓글 가져오기
      operationId: getReplyByIdx
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: replyIdx
        in: path
        description: 댓글 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
          schema:
            $ref: '#/definitions/Reply'
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        404:
          description: Reply not found
      x-swagger-router-controller: Reply
    put:
      tags:
      - reply
      summary: 댓글 수정
      description: 댓글 수정하기
      operationId: updateReply
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: replyIdx
        in: path
        description: 댓글 Idx
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ReplyInfo'
      responses:
        200:
          description: 성공
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        405:
          description: Invalid input
      x-swagger-router-controller: Reply
    delete:
      tags:
      - reply
      summary: 댓글 삭제
      description: 댓글 삭제하기
      operationId: deleteReply
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: replyIdx
        in: path
        description: 댓글 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Reply
  /perfume/{perfumeIdx}/keyword:
    post:
      tags:
      - keyword
      summary: 키워드 추가
      description : 특정 향수에 키워드 추가하기
      operationId: postKeyword
      security:
        - userToken: []
      x-security-scopes:
        - user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        description: 향수 Idx
        required: true
        type: integer
        format: int64
      - name: body
        in: body
        description: 키워드 정보
        required: true
        schema:
          $ref: '#/definitions/KeywordInfo'
      responses:
        200:
          description: 성공
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        405:
          description: Invalid input
      x-swagger-router-controller: Keyword
    get:
      tags:
      - keyword
      summary: 향수의 키워드 반환
      description: 특정 향수가 가지고 있는 키워드 목록 가져오기
      operationId: getKeywordOfPerfume
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        description: 향수 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              allOf:
              - $ref: '#/definitions/KeywordInfo'
              - type: object
                properties:
                  keywordIdx:
                    type: integer
                    format: int64
                example:
                  keywordIdx: 1
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
  /keyword:
    get:
      tags:
      - keyword
      summary: 전체 키워드 목록 반환
      description: 서버에 등록되어있는 전체 키워드 목록 가져오기
      operationId: getKeywordList
      produces:
      - application/json
      responses:
        200:
          description: 성공
          schema:
            type: array
            items:
              allOf:
              - $ref: '#/definitions/KeywordInfo'
              - type: object
                properties:
                  keywordIdx:
                    type: integer
                example:
                  keywordIdx: 1
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Keyword
  /keyword/{keywordIdx}:
    put:
      tags:
      - keyword
      summary: 키워드 수정
      description: 키워드 이름 수정하기
      operationId: updatekeyword
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: keywordIdx
        in: path
        description: 키워드 Idx
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/KeywordInfo'
      responses:
        200:
          description: 성공
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
        405:
          description: Invalid input
      x-swagger-router-controller: Keyword
    delete:
      tags:
      - keyword
      summary: 키워드 삭제
      description: 키워드 삭제하기
      operationId: deleteKeyword
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: keywordIdx
        in: path
        description: 키워드 Idx
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: 성공
        400:
          description: Invalid ID supplied
        401:
          description: API key is missing or invalid
          headers:
            WWW_Authenticate:
              type: string
      x-swagger-router-controller: Keyword
  /user/register:
    post:
      tags:
      - user
      description: 사용자 회원 가입
      operationId: registerUser
      produces:
      - application/json
      - application/x-www-urlencoded
      consumes:
      - application/json
      - application/x-www-urlencoded
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/User'
          - type: object
            properties:
              password:
                type: string
            example:
              password: test
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  /user/login:
    post:
      tags:
      - user
      description: 로그인
      operationId: loginUser
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        schema:
          type: object
          properties:
            email:
              type: string
              example: hee.youn@samsung.com
            password:
              type: string
              example: test
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: 로그인 성공
              data:
                type: object
                properties:
                  userIdx:
                    type: string
                    description: userIdx
                    example: 0
                  token:
                    type: string
                    description: login용 userToken
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWR4IjoxLCJlbWFpbCI6ImhlZS55b3VuQHNhbXN1bmcuY29tIiwibmlja25hbWUiOiLsv7zsubTrp6giLCJnZW5kZXIiOjEsInBob25lIjoiMDEwLTIwODEtMzgxOCIsImJpcnRoIjoxOTk1LCJncmFkZSI6MCwiYWNjZXNzVGltZSI6IjIwMjEtMDEtMDVUMTM6MDM6NDAuMDAwWiIsImNyZWF0ZWRBdCI6IjIwMjEtMDEtMDVUMTM6MDM6NDAuMDAwWiIsInVwZGF0ZWRBdCI6IjIwMjEtMDEtMDVUMTM6MDM6NDAuMDAwWiIsImlhdCI6MTYwOTg1MTgyMywiZXhwIjoxNjExNTc5ODIzLCJpc3MiOiJhZnVtZS1qYWNrcG90In0.cElGHvQZ0rcuow_LyKhHdKzcDPY70VzzukxzIXuyML4
                  refreshToken:
                    type: string
                    description: token 재발급 용 
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZWZyZXNoVG9rZW4iOnsidXNlcklkeCI6MSwiZW1haWwiOiJoZWUueW91bkBzYW1zdW5nLmNvbSIsIm5pY2tuYW1lIjoi7L-87Lm066eoIiwiZ2VuZGVyIjoxLCJwaG9uZSI6IjAxMC0yMDgxLTM4MTgiLCJiaXJ0aCI6MTk5NSwiZ3JhZGUiOjAsImFjY2Vzc1RpbWUiOiIyMDIxLTAxLTA1VDEzOjAzOjQwLjAwMFoiLCJjcmVhdGVkQXQiOiIyMDIxLTAxLTA1VDEzOjAzOjQwLjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIxLTAxLTA1VDEzOjAzOjQwLjAwMFoifSwiaWF0IjoxNjA5ODUxODIzLCJleHAiOjE2MTE1Nzk4MjMsImlzcyI6ImFmdW1lLWphY2twb3QifQ.Vb9-KO1DWOBhuVAoBzh0USybt5b5YpZqfqG1OU3snUY
        400:
          description: Invalid username/password supplied
      x-swagger-router-controller: User
  /user/logout:
    get:
      tags:
      - user, WEB 용
      operationId: logoutUser
      produces:
      - application/json
      parameters: []
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  /user/validate/email:
    get:
      tags:
      - user
      description: 이메일 중복 체크
      operationId: validateEmail
      produces:
      - application/json
      - application/x-www-urlencoded
      parameters:
      - in: query
        name: email
        type: string
        required: true
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: 이메일 중복 체크
              data:
                type: boolean
                description: 사용 가능 여부
                example: true
      x-swagger-router-controller: User
  /user/validate/name:
    get:
      tags:
      - user
      description: 이름 중복 체크
      operationId: validateName
      produces:
      - application/json
      - application/x-www-urlencoded
      parameters:
      - in: query
        name: nickname
        type: string
        required: true
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              message:
                type: string
                example: 이름 중복 체크
              data:
                type: boolean
                description: 사용 가능 여부
                example: true
      x-swagger-router-controller: User
  /user/auth:
    post:
      tags:
      - user
      summary: 유저 권한 조회
      operationId: authUser
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        schema:
          type: object
          properties:
            token:
              type: string
              description: userToken 값
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWR4IjoxLCJuaWNrbmFtZSI6IuycpO2drOyEsSIsImdlbmRlciI6Im1hbGUiLCJwaG9uZSI6IjAxMC0yMDgxLTM4IiwiZW1haWwiOiJoZWUueW91bkBzYW1zdW5nLmNvbSIsImJpcnRoIjoxOTk1LCJpYXQiOjE2MDcwMDU3NTIsImV4cCI6MTYwODczMzc1MiwiaXNzIjoiYWZ1bWUtamFja3BvdCJ9.wHBPi8pQuzJRbUy4noAwdwhCRtA9mG_UrI-S0IUEkxY
      responses:
        200:
          description: 권한 조회 성공
          schema:
            allOf:
            - type: object
              properties:
                isAuth:
                  type: boolean
                  description: 로그인 여부
                  example: false
                isAdmin:
                  type: boolean
                  description: 관리자 여부
                  example: false
            - $ref: '#/definitions/User'
      x-swagger-router-controller: User
  /user/{userIdx}:
    get:
      tags:
      - user
      operationId: getUserByIdx
      produces:
      - application/json
      parameters:
      - name: userIdx
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            allOf:
            - $ref: '#/definitions/User'
            - type: object
              properties:
                userIdx:
                  type: integer
              example:
                userIdx: 1
        400:
          description: Invalid userIdx supplied
        404:
          description: User not found
      x-swagger-router-controller: User
    put:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/json
      parameters:
      - name: userIdx
        in: path
        description: name that need to be updated
        required: true
        type: string
      - in: body
        name: body
        description: Updated user object
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/User'
          - type: object
            properties:
              userIdx:
                type: integer
            example:
              userIdx: 1
      responses:
        400:
          description: Invalid user supplied
        404:
          description: User not found
      x-swagger-router-controller: User
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
      - application/json
      parameters:
      - name: userIdx
        in: path
        description: The Idx that needs to be deleted
        required: true
        type: string
      responses:
        400:
          description: Invalid username supplied
        404:
          description: User not found
      x-swagger-router-controller: User
  /wishlist:
    post:
      tags:
      - wishlist
      summary: add wishlist
      description: 위시 리스트에 추가하기
      operationId: createWishlist
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema: 
          $ref: '#/definitions/Wishlist'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: successful operation
      x-swagger-router-controller: Wishlist
    put:
      tags:
      - wishlist
      summary: update wishlist
      description: 위시 리스트에 수정하기
      operationId: updateWishlist
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Wishlist'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: successful operation
      x-swagger-router-controller: Wishlist
    delete:
      tags:
      - wishlist
      summary: delete user's wishlist
      description: 유저가 가지고 있는 위시 리스트 전체 삭제하기
      operationId: deleteWishlistByUser
      security:
        - userToken: []
      x-security-scopes:
        - user
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: successful operation
      x-swagger-router-controller: Wishlist
    get:
      tags:
      - wishlist
      summary: read user's wishlist
      description: 유저가 가지고 있는 위시 리스트 전체 조회하기
      operationId: readWishlistByUser
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Perfume'
        default:
          description: successful operation
      x-swagger-router-controller: Wishlist
  /wishlist/{perfumeIdx}:
    delete:
      tags:
      - wishlist
      summary: delete wishlist
      description: 위시 리스트에 삭제하기
      operationId: deleteWishlist
      security:
        - userToken: []
      x-security-scopes:
        - user
      produces:
      - application/json
      parameters:
      - name: perfumeIdx
        in: path
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: successful operation
      x-swagger-router-controller: Wishlist
securityDefinitions:
  userToken:
      type: apiKey
      name: x-access-token
      in: header
      description: /Bearer {token}/ 를 입력해주시면 됩니다.
  APIKeyHeader:
    type: apiKey
    name: X-API-Key
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
      nickname:
        type: string
      gender:
        type: string
      phone:
        type: string
      birth:
        type: integer
      grade:
        type: integer
    example:
      email: hee.youn@samsung.com
      nickname: 쿼카맨
      gender: 남자
      phone: 010-2081-3818
      grade: 0
      birth: 1995
  KeywordInfo:
    type: object
    properties:
      keyword:
        type: string
    example:
      keyword: 달달한
  PerfumeInfo:
    type: object
    properties:
      name:
        type: string
      englishName:
        type: string
      mainSeriesIdx:
        type: integer
      brandIdx:
        type: integer
      imageUrl:
        type: string
      releaseDate:
        type: string
    example:
      name: 154 코롱
      englishName: 154 Cologne
      mainSeriesIdx: 1
      brandIdx: 1
      imageUrl: https://contents.lotteon.com/itemimage/_v065423/LE/12/04/59/50/19/_1/22/48/08/13/9/LE1204595019_1224808139_1.jpg/dims/resizef/554X554
      releaseDate: '2020-11-20'
  Perfume:
    properties:
      perfumeIdx:
        type: integer
      likeCnt:
        type: integer
      isLiked:
        type: boolean
      brandName:
        type: string
      mainSeriesName:
        type: string
    allOf:
    - $ref: '#/definitions/PerfumeInfo'
    - {}
    example:
      perfumeIdx: 1
      likeCnt: 4
      isLiked: true
      brandName: 딥디크 파리스
      mainSeriesName: 플로럴
  PerfumeDetailInfo:
    properties:
      story:
        type: string
      abundanceRate:
        type: string
        enum:
        - 코롱
        - 오 드 뜨왈렛
        - 오 드 퍼퓸
        - 퍼퓸
      imageUrl:
        type: string
      volumeAndPrice:
        type: array
        items:
          type: object
          properties:
            volume:
              type: integer
            price:
              type: integer
    example:
      story: 조 말론 런던 1호점이 위치한 런던의 거리 번호입니다. 광범위한 후각적 탐구를 요하는 이 향수는 만다린, 그레이프 프루트\
        , 바질, 너트맥, 베티버와 같은 브랜드를 대표하는 성분들을 모두 함유하고 있습니다. 다양한 느낌을 연출하는 향입니다.
      abundanceRate: 코롱
      volumeAndPrice:
      - volume: 30
        price: 90000
      - volume: 30
        price: 90000
      - volume: 30
        price: 90000
  PerfumeDetail:
    properties:
      score:
        type: number
        description: 점수 평균 값
        minimum: 0
        maximum: 5
      longevity:
        type: object
        description: 지속감
        properties:
          veryWeak:
            type: number
            minimum: 0
            maximum: 100
            description: 매우 약함
          weak:
            type: number
            minimum: 0
            maximum: 100
            description: 약함
          medium:
            type: number
            minimum: 0
            maximum: 100
            description: 보통
          strong:
            type: number
            minimum: 0
            maximum: 100
            description: 강함
          veryStrong:
            type: number
            minimum: 0
            maximum: 100
            description: 매우 강함
      sillage:
        type: object
        description: 잔향감
        properties:
          light:
            type: number
            minimum: 0
            maximum: 100
            description: 약함
          normal:
            type: number
            minimum: 0
            maximum: 100
            description: 보통
          heavy:
            type: number
            minimum: 0
            maximum: 100
            description: 강함
      seasonal:
        type: object
        properties:
          spring:
            type: number
            minimum: 0
            maximum: 100
            description: 봄
          summer:
            type: number
            minimum: 0
            maximum: 100
            description: 여름
          fall:
            type: number
            minimum: 0
            maximum: 100
            description: 가을
          winter:
            type: number
            minimum: 0
            maximum: 100
            description: 겨울
      keywords:
        type: array
        items:
          type: string
          example: 
      noteType:
        type: integer
        description: 0은 일반 노트, 1은 single 노트
      ingredients:
        $ref: '#/definitions/PerfumeDetailInfo_ingredients'
    allOf:
    - $ref: '#/definitions/PerfumeInfo'
    - $ref: '#/definitions/PerfumeDetailInfo'
    - type: object
      properties:
        perfumeIdx:
          type: integer
      example:
        perfumeIdx: 1
    example:
      score: 5.4
      abundanceRate: 오 드 퍼퓸
      seasonal:
        spring: 0
        summer: 30
        fall: 30
        winter: 40
      sillage:
        light: 40
        medium: 20
        heavy: 40
      longevity:
        veryWeak: 10
        weak: 10
        normal: 20
        strong: 20
        veryStrong: 10
      noteType: 0
      ingredients:
        top:
        - ingredientIdx: 1
          name: 재료1
          description: 향긋
        - ingredientIdx: 5
          name: 재료5
          description: 향긋
        middle:
        - ingredientIdx: 2
          name: 재료2
          description: 향긋
        - ingredientIdx: 6
          name: 재료6
          description: 향긋
        base:
        - ingredientIdx: 3
          name: 재료3
          description: 향긋
        - ingredientIdx: 4
          name: 재료4
          description: 향긋
        - ingredientIdx: 7
          name: 재료7
          description: 향긋
  SeriesInfo:
    type: object
    properties:
      name:
        type: string
      englishName:
        type: string
      description:
        type: string
    example:
      name: 꿀
      englishName: Honey
      description: 화이트 허니, 허니
  IngredientInfo:
    type: object
    properties:
      name:
        type: string
      englishName:
        type: string
      description:
        type: string
      imageUrl:
        type: string
    example:
      name: 씨쏠트
      englishName: Sea Salt
      description: 바다 소금
      imageUrl: 'url'
  NoteInfo:
    type: object
    properties:
      ingredientIdx:
        type: integer
      perfumeIdx:
        type: integer
      type: 
        type: integer
    example:
      ingredientIdx: 1
      perfumeIdx: 1
      type: 4
  BrandInfo:
    type: object
    properties:
      name:
        type: string
      englishName:
        type: string
      startCharacter:
        type: string
      description:
        type: string
      imageUrl:
        type: string
    example:
      name: (테스트)조말론
      englishName: (테스트)Jo Malone
      startCharacter: ㅌ
      description: (테스트)런던 브랜드
      imageUrl: (테스트)
  ReviewInfo:
    type: object
    properties:
      score:
        description: 별점
        type: number
        minimum: 1
        maximum: 5
      content:
        description: 내용
        type: string  
      longevity:
        description: 지속력
        type: string
        enum:
        - 매우 약함
        - 약함
        - 보통
        - 강함
        - 매우 강함
      sillage:
        description: 잔향감
        type: string
        enum:
        - 가벼움
        - 보통
        - 무거움
      seasonal:
        description: 계절감
        type: array
        items:
          type: string
          enum:
            - 봄
            - 여름
            - 가을
            - 겨울        
      gender:
        description: 성별감
        type: string
        enum:
        - 남성
        - 중성
        - 여성
      access: 
        description: 시향노트 공유 여부
        type: boolean
        enum:
        - true
        - false
    example:
      score: 2
      longevity: 강함
      sillage: 보통
      seasonal:
      - 겨울
      - 가을
      gender: 중성
      access: true
      content: 시향노트 내용
  ReplyInfo:
    type: object
    properties:
      userIdx:
        type: integer
        format: int64
      content:
        type: string
    example:
      userIdx: 2
      content: 저한테도 인생 향수에요~
  Reply:
    type: object
    properties:
      nickname:
        type: string
        example: 
    allOf:
    - $ref: '#/definitions/ReplyInfo'
    - {}
    example:
      nickname: 향린이S2
  Filter:
    type: object
    properties:
      series:
        type: array
        items:
          type: string
      brands:
        type: array
        items:
          type: string
      keywords:
        type: array
        items:
          type: string
      sortBy:
        type: string
        enum:
        - likeCnt_asc
        - releaseDate_asc
        - likeCnt_desc
        - recent_desc
        - releaseDate_desc
    example:
      series:
      - 플로럴
      - 오리엔탈
      - 시트러스
      brands:
      - 조 말론 런던
      - 르 라보
      - 딥디크 파리스
      keywords:
      - 구현전
      sortBy: recent_asc
  Wishlist:
    type: object
    properties:
      perfumeIdx:
        type: integer
        format: int32
      priority:
        type: integer
    example:
      perfumeIdx: 1
      priority: 4
  ApiResponse:
    type: object
    properties:
      message:
        type: string
        example: 메세지
      data:
        type: string
        example: 0
  PerfumeDetailInfo_ingredients:
    type: object
    properties:
      top:
        type: array
        items:
          $ref: '#/definitions/IngredientInfo'
      middle:
        type: array
        items:
          $ref: '#/definitions/IngredientInfo'
      base:
        type: array
        items:
          $ref: '#/definitions/IngredientInfo'
      single:
        type: array
        items:
          $ref: '#/definitions/IngredientInfo'
responses:
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
externalDocs:
  description: Afume Server Git Wiki
  url: https://github.com/A-fume/A.fume.Server/wiki
